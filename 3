def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg27, arg28):
    var34 = func6(arg27, arg28)
    if arg27 < arg27:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in range(23):
        var39.func8(var34, var34)
    var41 = arg28 & arg27 ^ arg27 & arg28
    if arg27 < var34:
        var42 = (arg27 & -1443733114) | var41 ^ var41
    else:
        var42 = (-205442579 & 195748931) & var41 | -2046382214
    var43 = (var34 & (arg28 & 878)) & arg27
    var44 = (var43 & arg27 + -1282614783) & var34
    var45 = -1766293171 + var43 & 974 - var34
    var46 = 493 ^ ((var44 ^ 109) ^ var45)
    var47 = var45 | var43 | var43 ^ var34
    var48 = arg27 & arg27
    var49 = arg28 | (var48 | var48) ^ arg28
    var50 = -235 + var41
    var51 = arg27 - var45 - var49 & var49
    var52 = var44 | var45 + var50 | var34
    if var46 < var49:
        var53 = arg27 - var34
    else:
        var53 = var41 + var47 | var47 - arg28
    var54 = (var47 + var46 - var52) + var52
    var55 = var51 ^ var47 ^ var34 - var44
    var56 = var43 + var41 + var47
    if var47 < var49:
        var57 = 1453410960 ^ var46
    else:
        var57 = (-1111447536 - arg27 & var46) - var52
    if var34 < var49:
        var58 = (arg27 ^ var52) - (var34 | var47)
    else:
        var58 = var55 + var49
    var59 = var47 + var34
    var60 = (arg27 ^ (var59 | arg28)) + var45
    var61 = var45 | var47
    var62 = var43 & var44 + (var51 + var41)
    var63 = -84 & var41 + -2111905779
    result = var45 | var47
    return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1 & ((-1543769705 + arg37) ^ (-1230718185 | -603892527)) | arg38 | -1
        return result
class class7(class9):
    def func8(self, arg35, arg36):
        return 0
def func6(arg29, arg30):
    var31 = (-298415383 + 1214364005) & ((arg30 | -1581269506) - (arg30 | arg29))
    var32 = var31 & ((((-298514527 - ((arg30 - -930301369 - arg30) + var31) & 833 ^ ((arg30 + (var31 ^ arg30)) + (-1579245438 & -1655185369 ^ (arg29 - var31))) + arg30 ^ arg29 + 950653669) - 104) + arg29) | -73 | var31) & var31
    if var31 < var31:
        var33 = 255657941 - (arg29 + var31 & arg29 ^ var31 + 160893504 & (-818 | (var31 ^ ((-390 | var32 & (arg30 | arg30 & var32 & 1761166757 + 1854635675)) - (var31 + arg30 | 333451200 - arg30 ^ arg30 + var32) - var32))))
    else:
        var33 = ((var31 + arg30 ^ -431 - var32) ^ (arg29 ^ 1643245676)) ^ arg30 | (887626206 ^ arg29) | 213 + ((arg29 & var32) & arg29)
    result = var32 & var31 & ((-1336209507 + arg29) + (var31 - (var31 ^ arg29 ^ var31 + var31 | arg30) ^ var32)) & -2006361040
    return result
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var11 = func4(arg2, arg1)
    if arg1 < var11:
        var12 = -26 - (arg1 | (var6 ^ var6))
    else:
        var12 = arg2 + 850
    var13 = 685 - -225 + -624 - arg2
    var14 = var11 + arg1
    var15 = 839 + var13 | 252
    var16 = arg2 ^ arg2
    var17 = var6 - var15 & -177
    var18 = arg2 + var6 ^ -918 | -1618334067
    var19 = (-636 ^ arg1 + var18) + var13
    var20 = var15 | var18 + var16
    var21 = (var14 ^ var14 & arg1) ^ var16
    var22 = (var15 | var18 - -329) - var21
    var23 = var15 | var20 - var22 | var17
    var24 = var13 & arg1 + var23 ^ var23
    var25 = var23 ^ (var21 - var23)
    var26 = (var16 ^ var16 & -363) | 348
    result = var19 & arg1 - var17
    return result
def func4(arg7, arg8):
    var9 = 0
    for var10 in (arg8 + arg7 for i in range(15)):
        var9 += (arg7 - var9) ^ arg7
    return var9
def func2(arg3, arg4):
    closure = [0]
    def func3(acc, rest):
        var5 = -4 + rest
        closure[0] += var5
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 5'
    print 'arg_number: 27'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,
